CREATE TABLE "USER" (
  UserID INT PRIMARY KEY,
  UserName VARCHAR2(50),
  Email VARCHAR2(70),
  Phone NUMBER,
  Password VARCHAR2(50)
);

CREATE TABLE ROLE (
  RoleID INT PRIMARY KEY,
  RoleName VARCHAR2(50)
);

CREATE TABLE USER_ROLE (
  UserID INT,
  RoleID INT,
  PRIMARY KEY (UserID, RoleID),
  FOREIGN KEY (UserID) REFERENCES "USER"(UserID),
  FOREIGN KEY (RoleID) REFERENCES ROLE(RoleID)
);

CREATE TABLE LOCATION (
  LocationID INT PRIMARY KEY,
  Address VARCHAR2(100),
  City VARCHAR2(50),
  ZIP INT
);

CREATE TABLE CUSTOMER (
  CustomerID INT PRIMARY KEY,
  UserID INT,
  FirstName VARCHAR2(50),
  LastName VARCHAR2(70),
  Preference VARCHAR2(50),
  LocationID INT,
  FOREIGN KEY (UserID) REFERENCES "USER"(UserID),
  FOREIGN KEY (LocationID) REFERENCES LOCATION(LocationID)
);

CREATE TABLE KITCHEN (
  KitchenID INT PRIMARY KEY,
  UserID INT,
  Name VARCHAR2(70),
  Description BLOB,
  Image BLOB,
  IsActive CHAR(1),
  LocationID INT,
  FOREIGN KEY (UserID) REFERENCES "USER"(UserID),
  FOREIGN KEY (LocationID) REFERENCES LOCATION(LocationID)
);

CREATE TABLE MENU (
  MenuID INT PRIMARY KEY,
  Name VARCHAR2(100),
  KitchenID INT,
  FOREIGN KEY (KitchenID) REFERENCES KITCHEN(KitchenID)
);

CREATE TABLE CATEGORY (
  CategoryID INT PRIMARY KEY,
  Name VARCHAR2(50)
);

CREATE TABLE TAG (
  TagID INT PRIMARY KEY,
  Name VARCHAR2(50)
);

CREATE TABLE MENU_ITEM (
  MenuItemID INT PRIMARY KEY,
  MenuID INT,
  OrderIndex INT,
  Name VARCHAR2(100),
  Description BLOB,
  Price INT,
  Image BLOB,
  CategoryID INT,
  FOREIGN KEY (MenuID) REFERENCES MENU(MenuID),
  FOREIGN KEY (CategoryID) REFERENCES CATEGORY(CategoryID)
);

CREATE TABLE MENU_ITEM_TAG (
  MenuItemID INT,
  TagID INT,
  PRIMARY KEY (MenuItemID, TagID),
  FOREIGN KEY (MenuItemID) REFERENCES MENU_ITEM(MenuItemID),
  FOREIGN KEY (TagID) REFERENCES TAG(TagID)
);

CREATE TABLE ORDER_STATUS (
  StatusID INT PRIMARY KEY,
  StatusName VARCHAR2(50)
);

CREATE TABLE COUPON (
  CouponID INT PRIMARY KEY,
  Code VARCHAR2(50),
  DiscountValue INT,
  ValidFrom DATE,
  ValidTo DATE
);

CREATE TABLE "ORDER" (
  OrderID INT PRIMARY KEY,
  CustomerID INT,
  StatusID INT,
  KitchenID INT,
  CouponID INT,
  PreparedDate DATE,
  IsPaid CHAR(1),
  Price DECIMAL(10, 2),
  Note VARCHAR2(500),
  OrderedDate DATE,
  FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID),
  FOREIGN KEY (StatusID) REFERENCES ORDER_STATUS(StatusID),
  FOREIGN KEY (KitchenID) REFERENCES KITCHEN(KitchenID),
  FOREIGN KEY (CouponID) REFERENCES COUPON(CouponID)
);

CREATE TABLE ORDER_ITEM (
  OrderItemID INT PRIMARY KEY,
  OrderID INT,
  MenuItemID INT,
  Quantity INT,
  FOREIGN KEY (OrderID) REFERENCES "ORDER"(OrderID),
  FOREIGN KEY (MenuItemID) REFERENCES MENU_ITEM(MenuItemID)
);

CREATE TABLE RATING (
  RatingID INT PRIMARY KEY,
  UserID INT,
  KitchenID INT,
  Comment VARCHAR2(100),
  Star INT,
  FOREIGN KEY (UserID) REFERENCES "USER"(UserID),
  FOREIGN KEY (KitchenID) REFERENCES KITCHEN(KitchenID)
);

CREATE TABLE PAYMENT (
  PaymentID INT PRIMARY KEY,
  OrderID INT,
  PaymentMethod VARCHAR2(30),
  Amount DECIMAL(10, 2),
  PaymentDate DATE,
  TransactionID VARCHAR2(100),
  FOREIGN KEY (OrderID) REFERENCES "ORDER"(OrderID)
);

CREATE TABLE OPENING_HOURS (
  OpeningHoursID INT PRIMARY KEY,
  KitchenID INT,
  Day INT,
  FromHour INT,
  FromMinute INT,
  ToHour INT,
  ToMinute INT,
  FOREIGN KEY (KitchenID) REFERENCES KITCHEN(KitchenID)
);

CREATE TABLE DELIVERY_PERSON (
  DeliveryPersonID INT PRIMARY KEY,
  FK_UserID INT,
  VehicleNumber VARCHAR2(20),
  FOREIGN KEY (FK_UserID) REFERENCES "USER"(UserID)
);

CREATE TABLE DELIVERY (
  DeliveryID INT PRIMARY KEY,
  OrderID INT,
  DeliveryPersonID INT,
  DeliveryStatus VARCHAR2(30),
  EstimatedDeliveryTime DATE,
  DeliveredTime DATE,
  FOREIGN KEY (OrderID) REFERENCES "ORDER"(OrderID),
  FOREIGN KEY (DeliveryPersonID) REFERENCES DELIVERY_PERSON(DeliveryPersonID)
);

CREATE TABLE KITCHEN_PAYOUT (
  KitchenPayoutID INT PRIMARY KEY,
  KitchenID INT,
  Amount DECIMAL(10, 2),
  PayoutDate DATE,
  Notes VARCHAR2(255),
  FOREIGN KEY (KitchenID) REFERENCES KITCHEN(KitchenID)
);

CREATE TABLE DELIVERY_PAYOUT (
  DeliveryPayoutID INT PRIMARY KEY,
  DeliveryPersonID INT,
  Amount DECIMAL(10, 2),
  PaymentDate DATE,
  Notes VARCHAR2(255),
  FOREIGN KEY (DeliveryPersonID) REFERENCES DELIVERY_PERSON(DeliveryPersonID)
);

CREATE TABLE CART (
  CartID INT PRIMARY KEY,
  CustomerID INT,
  CreatedDate DATE,
  FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID)
);

CREATE TABLE CART_ITEM (
  CartItemID INT PRIMARY KEY,
  CartID INT,
  MenuItemID INT,
  Quantity INT,
  FOREIGN KEY (CartID) REFERENCES CART(CartID),
  FOREIGN KEY (MenuItemID) REFERENCES MENU_ITEM(MenuItemID)
);
